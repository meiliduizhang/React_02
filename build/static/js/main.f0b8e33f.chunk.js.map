{"version":3,"sources":["pagess/Home.js","router.config.js","pagess/Doc.js","pagess/Core.js","pagess/Guide.js","pagess/Api.js","pagess/Hooks.js","pagess/Tuto.js","pagess/Blog.js","pagess/Comm.js","pagess/Login.js","pagess/Header.js","App.js","index.js"],"names":["Home","keys","style","textAlign","fontSize","onClick","history","push","routes","path","exact","component","withRouter","className","map","rests","key","from","to","activeClassName","pri","props","localStorage","setItem","replace","location","state","Header","RouteWithSubRoutes","route","render","PrivateRoute","children","getItem","pathname","App","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.f0b8e33f.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nconst Home = (keys) => {\r\n    return (\r\n        <div style={{textAlign:'center',fontSize:'40px'}}>\r\n            <h2>React</h2>\r\n            <p>用于构建用户界面的 JavaScript 库</p>\r\n            <div>\r\n                <button onClick={\r\n                    ()=>keys.history.push('/doc')\r\n                }>快速开始</button>\r\n                <button onClick={\r\n                    ()=>keys.history.push('/tuto')\r\n                }>入门教程</button>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Home;","import Home from './pagess/Home';//主页 react\r\nimport Doc from './pagess/Doc';//文档\r\nimport Tuto from './pagess/Tuto';//教程\r\nimport Blog from './pagess/Blog';//博客\r\nimport Comm from './pagess/Comm';//社区\r\nimport Login from './pagess/Login';//登陆\r\nimport Core from './pagess/Core';//教程\r\nimport Api from './pagess/Api';//博客\r\nimport Guide from './pagess/Guide';//社区\r\nimport Hooks from './pagess/Hooks';//登陆\r\nconst routes = [//routes为一个数组\r\n    {\r\n        path: '/',\r\n        exact: true,\r\n        component: Home\r\n    },\r\n    {\r\n        path: '/doc',\r\n        component: Doc,\r\n        pri: true,//pri为真则获得了权限\r\n        routes: [\r\n            {\r\n              path: '/doc/core',\r\n              component: Core,\r\n            },\r\n            {\r\n              path: '/doc/guide',\r\n              component: Guide,\r\n            },\r\n            {\r\n              path: '/doc/api',\r\n              component: Api,\r\n            },\r\n            {\r\n              path: '/doc/hooks',\r\n              component: Hooks,\r\n            },\r\n        ]\r\n    },\r\n    {\r\n        path: '/tuto',\r\n        component: Tuto,\r\n        pri: true\r\n    },\r\n    {\r\n        path: '/blog',\r\n        component: Blog\r\n    },\r\n    {\r\n        path: '/comm',\r\n        component: Comm\r\n    },\r\n    {\r\n        path: '/login',\r\n        component: Login\r\n    },\r\n]\r\n\r\nexport default routes;","import React from 'react';\r\nimport {Redirect,withRouter,Switch,Link} from 'react-router-dom';\r\nimport{RouteWithSubRoutes} from '../App';\r\nimport './doc.css';\r\n\r\n\r\nconst Doc = ({routes}) => {\r\n    return (    \r\n        <div className='doc'> \r\n            <div className=\"content\">\r\n            <Switch>\r\n                {\r\n                    routes.map((rests,key)=>{\r\n                        return <RouteWithSubRoutes {...rests} key={key} />\r\n                    })\r\n                }\r\n            </Switch>\r\n\t\t\t{/* 倘若打开doc页，在获得权限后，首先显示的是core的那一页 */}\r\n\t\t\t<Redirect from='/doc' to='/doc/core' /> \r\n            </div>\r\n            {/* 有序列表 */}\r\n            <ol>\r\n                <li><Link to='/doc/core' activeClassName='active'>核心概念</Link></li>\r\n                <li><Link to='/doc/guide' activeClassName='active' >高级指引</Link></li>\r\n                <li><Link to='/doc/api' activeClassName='active'>API</Link></li>\r\n                <li><Link to='/doc/hooks' activeClassName='active'>Hooks</Link></li>\r\n            </ol>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default withRouter(Doc);//高阶组件\r\n","import React from 'react'\r\n\r\nconst Core = () => {\r\n    return (\r\n        <div>\r\n            你好，这里是Core。\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Core;","import React from 'react'\r\n\r\nconst Guide = () => {\r\n    return (\r\n        <div>\r\n            你好，这里是Guide。\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Guide;","import React from 'react'\r\n\r\nconst Api = () => {\r\n    return (\r\n        <div>\r\n            你好，这里是Api。\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Api;","import React from 'react'\r\n\r\nconst Hooks = () => {\r\n    return (\r\n        <div>\r\n            你好，这里是Hooks。\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Hooks;","import React from 'react'\r\n\r\nconst Tuto = () => {\r\n    return (\r\n        <div>\r\n            Tuto\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Tuto","import React from 'react'\r\n\r\nconst Blog = () => {\r\n    return (\r\n        <div>\r\n            Blog\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Blog;","import React from 'react'\r\n\r\nconst Comm = () => {\r\n    return (\r\n        <div>\r\n            Comm\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Comm","import React from 'react'\r\n\r\nconst Login = (props) => {\r\n    const login = ()=>{\r\n        localStorage.setItem('key','value')\r\n        props.history.replace(props.location.state)\r\n    }\r\n    return (\r\n        <div>\r\n            <button onClick={login}>登录</button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Login;\r\n\r\n\r\n","import React from 'react';\r\nimport { NavLink } from 'react-router-dom';//导航链接\r\nimport './header.css';\r\n\r\nconst Header = () => {\r\n    return (\r\n        <header>\r\n            <nav>\r\n                {/* 默认打开页 */}\r\n                <NavLink activeClassName='active' exact to='/'>React</NavLink>\r\n                \r\n                <NavLink activeClassName='active' to='/doc'>文档</NavLink>\r\n                <NavLink activeClassName='active' to='/tuto'>教程</NavLink>\r\n                <NavLink activeClassName='active' to='/blog'>博客</NavLink>\r\n                <NavLink activeClassName='active' to='/comm'>社区</NavLink>\r\n            </nav>\r\n        </header>\r\n    )\r\n}\r\n\r\nexport default Header;","import React from 'react';\r\nimport {BrowserRouter as Router,Redirect,Route,Switch} from 'react-router-dom';\r\nimport routes from './router.config';\r\nimport Header from './pagess/Header';\r\n\r\nexport const RouteWithSubRoutes = (route,key)=>{//判断是否为权限路由，此函数在app中也有用到，命名导出\r\n\tif(!route.pri){//若不是权限路由，返回普通路由页面，并显示内容\r\n\t\treturn(\r\n\t\t\t<Route\r\n\t\t\t\tpath={route.path}\r\n\t\t\t\trender={props => (\r\n\t\t\t\t\t<route.component {...props} routes={route.routes} />\r\n\t\t\t\t)}\r\n\t\t\t/>\r\n\t\t)\t\r\n\t}else{//获得权限 进入权限路由页，显示内容，其路径也跟随改变\r\n\t\treturn (\r\n\t\t\t<PrivateRoute key={key} path={route.path}>\r\n\t\t\t\t<Route\r\n\t\t\t\t\tpath={route.path}\r\n\t\t\t\t\trender={props => (\r\n\t\t\t\t\t\t<route.component {...props} routes={route.routes} />\r\n\t\t\t\t\t)}\r\n\t\t\t\t/>\r\n\t\t\t</PrivateRoute>\r\n\t\t);\t\r\n\t}\t\r\n}\r\n\r\nconst PrivateRoute = ({children,...route}) =>{\r\n\treturn (\r\n\t\t<Route\r\n\t\t\t{...route}\r\n\t\t\trender={({location})=>\r\n\t\t\t\tlocalStorage.getItem('key')//本地存储有值的话直接返回页面，没有的话跳转到登陆页面\r\n\t\t\t\t?children\r\n\t\t\t\t:(\r\n\t\t\t\t<Redirect\r\n\t\t\t\t\tto={{\r\n\t\t\t\t\t\tpathname:'/login',\r\n\t\t\t\t\t\tstate:location\r\n\t\t\t\t\t}}>\r\n\t\t\t\t</Redirect>\r\n\t\t\t)}\r\n\t\t></Route>\r\n\t)\r\n}\r\n\r\nconst App = ()=>{\r\n\treturn (\r\n\t\t<Router>\r\n\t\t\t{/* 导航 */}\r\n\t\t\t<Header />\r\n\t\t\t<Switch>\r\n\t\t\t\t{\r\n\t\t\t\t\troutes.map((rests,key)=>{\r\n\t\t\t\t\t\treturn <RouteWithSubRoutes  {...rests} key={key}/>\r\n\t\t\t\t\t})\r\n\t\t\t\t}\r\n\t\t\t</Switch>\r\n\t\t</Router>\r\n\t)\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n// import Home from './pages/Home';//默认导出，只能导出一个\n// import {Home} from './pages/Home';//命名导出，起什么名字就叫什么名字\n// import Control from './components/Control';\n// import Demo01 from './pages/Demo01';\nimport App from './App';\n// import Hoc,{Detail} from './pages/Hoc';//{Detail}为命名导出\n// import Hook from './pages/Hook';\n// import Context from './pages/Context';\n// import './index.css';\n// import App from './App';//全称为\"./APP.js\"\n// import * as serviceWorker from './serviceWorker';\nimport 'antd-mobile/dist/antd-mobile.css';\n\n//例子1渲染\n// // let ele = <h1 id=\"title\">he</h1>;\n// // let ele=React.createElement(\n// //     'h1',\n// //     {id:'title'},\n// //     \"hello react1111\"\n// // );\n// /*好几种写法*/\n// // let ele=React.createElement(\n// //        'h1',\n// //        {id:'title'},\n// //        React.createElement('div',{},'hello'),\n// //        'react'\n// // )\n// let ele = <h1 id=\"title\" className=\"tit\">\n//     <div>hello</div>\n//     react\n//     </h1>;\n// //将jsx对象渲染到DOM中\n//     let ReactDOM={\n//       render(eleObj,container){\n//         //解构\n//         const{type,props}=eleObj;\n//         //创建第一层结点\n//         let ele=document.createElement(type);\n//         //遍历属性对象，将属性添加到第一层结点对象上\n//         for (const prop in props) {\n//           //  if(prop=='className'){\n//           //    ele.setAttribute('class',props[prop]);\n//           //  }\n//           if(prop=='children'){\n            \n//               if(typeof props.children == 'string'){\n//                 const txtNode=document.createTextNode(props[prop]);\n//                 ele.appendChild(txtNode);\n//                 break;\n//               }\n//               //将第一层结点对象的子元素添加进去\n//               props.children.forEach(child=>{\n//                 if(typeof child=='string'){\n//                   const txtNode=document.createTextNode(child);\n//                   ele.appendChild(txtNode);\n//                 }\n//                 else{\n//                   ReactDOM.render(child,ele);\n//                 }\n//               })\n//             }\n//           else{\n//             ele[prop]=props[prop];\n//           }\n          \n//         }\n//         //将第一层DOM结点添加到container中。\n//         container.appendChild(ele);\n//       }\n//     }\n// console.log(ele);\n// ReactDOM.render(\n//   // <React.StrictMode>\n//   //   <App />\n//   // </React.StrictMode>,\n//   // <h1>hello react</h1>,\n//   ele,\n//   document.getElementById('root')\n// );\n/*\n1、原生JS，DOM操作(jQuery)\n2、React:开发效率高，性能高\n3、环境搭建，会创建一个项目并且运行\n4、JSX语法\n*/\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n// serviceWorker.unregister();\n\n// //例子二渲染,时间\n// setInterval(()=>{\n//   let ele = <h1 id=\"title\" className=\"tit\">\n//   <div>当前时间</div>\n//   {new Date().toLocaleString()}\n//   </h1>\n\n//     console.log(ele);\n//     ReactDOM.render(\n//         ele,\n//         document.getElementById('root')\n//     )\n// },1000);\n\n// // 例子三函数组件，UI（展示），木偶组件\n// function App(props){\n//   console.log(props);\n//   const{title,id}=props;\n//   return <div>\n//     <h1>组件</h1>\n//     <div>{props.title}</div>\n//     <div>hello</div>  \n//     <div>{id}</div>\n//     </div>\n// }\n// ReactDOM.render(\n//   <App title=\"你好\" id=\"123\"/>,\n//   document.getElementById('root')\n// )\n\n//智能组件\n// class Demo extends React.Component{\n//   render(){\n//     return<div>\n//       <App title=\"任意值\" id=\"app\" />\n//       <App title=\"任意值\" id=\"app\" />\n//       <App title=\"任意值\" id=\"app\" />\n//       <App title=\"任意值\" id=\"app\" />\n//     </div>\n//   }\n// }\n// ReactDOM.render(\n//   <Demo title=\"任意值\" id=\"app\"/>,\n//   document.getElementById('root')\n// );\n// class Demo extends React.Component{\n//   constructor(){\n//   super();\n//   //声明状态\n//   this.state={\n//     name:'tom'\n//   }\n//   setTimeout(()=>{\n//   this.setState({name:'jerry'})\n//   },3000)\n// }\n//   render(){\n//     return <div>\n//       <div>name:{this.state.name}</div>\n//       <App title=\"任意值\" id=\"app\" />\n//     </div>\n//   }\n// }\n// ReactDOM.render(\n//   <Demo title=\"任意值\" id=\"app\"/>,\n//   document.getElementById('root')\n// );\n\n// // 先安装jquery再执行此后的代码\n// import $ from \"jquery\";\n// console.log($);\n// ReactDOM.render(\n//     <div />,\n//     document.getElementById('root')\n//   );\n\n// //列表序号\n// class Home extends React.Component{\n//     constructor(){\n//     super();\n//     //声明状态\n//     this.state={\n//       data:[1,2,3]\n//     }\n//     setTimeout(()=>{\n//       this.setState({data:[5,6,7,8]})\n//     },500)\n//   }\n//     render(){\n//       return <ul>\n//         {\n//           this.state.data.map(\n//             (item)=><li>{item}</li>\n//           )\n//         }\n//       </ul>\n//   }\n// }\n//   ReactDOM.render(\n//   <Home title=\"anyone\"/>,\n//     document.getElementById('root')\n// );\n\n//类爬虫\n// class Home extends React.Component{\n//     constructor(){\n//     super();\n//     //声明状态\n//     this.state={\n//       data:[]\n//     }\n//     fetch('https://cnodejs.org/api/v1/topics')\n//     .then(res=>res.json())\n//     .then(data=>{\n//         console.log(data);\n//         this.setState({data:data.data})\n//     })\n//   }\n//     render(){\n//       const {data}=this.state;\n//       return <ul>\n//         {\n//           this.state.data.map(\n//             (item)=><li>{item.title}</li>\n//           )\n//         }\n//       </ul>\n//   }\n// }\n//   ReactDOM.render(\n//   <Home title=\"anyone\"/>,\n//     document.getElementById('root')\n// );\n\n// //页面切换\n// let List = (props)=>{\n//   return <ul>\n//     {\n//       props.data.map(\n//         (item)=><li key={item.id}>{item.title}</li>\n//       )\n//     }\n//   </ul>\n// }\n\n// class Home extends React.Component{\n//   constructor(props){\n//     super(props);\n//     this.state = {\n//       data:[]\n//     }\n//     // this.handleClick = this.handleClick.bind(this)\n//   }\n//   componentDidMount(){\n//     fetch('https://cnodejs.org/api/v1/topics')\n//     .then(res=>res.json())\n//     .then( ({data}) => {\n//       this.setState({data})\n//     })\n//   }\n//   getData = (page)=>{\n//     fetch('https://cnodejs.org/api/v1/topics?page='+page)\n//     .then(res=>res.json())\n//     .then( ({data}) => {\n//       this.setState({data})\n//     })\n//   }\n//   render(){\n//     const { data } = this.state;\n//     const btns = [1,2,3,4,5];\n//     return <div>\n//       {\n//         btns.map(\n//           (item)=>(\n//             <button \n//               key={item}\n//               onClick={()=>this.getData(item)}\n//             >\n//               {item}\n//             </button>\n//         ))\n//       }\n//       <List data={data}/>\n//     </div>\n//   }\n// }\n\n// ReactDOM.render(\n//   <Home data='abc'/>,\n//   document.getElementById('root')\n// );\n\n//导入与导出  只需渲染的这段代码 加上导入其他三个文件，List.js,Home.js,Buttons.js\n// ReactDOM.render(\n//     <Home data='abc'/>,\n//     document.getElementById('root')\n//   );\n\n// 受控组件，todolist\n// ReactDOM.render(\n//     <Control />,\n//     document.getElementById('root')\n// );\n//红框和tom那个\n// ReactDOM.render(\n//     <Demo01 />,\n//     document.getElementById('root')\n// );\n//\n\nReactDOM.render(\n    <App />,\n    document.getElementById('root')\n);\n// let url = 'https://www.fastmock.site/mock/9e4bbf9e35ad15942010865690c87ac6/api/login';\n// fetch(url, {\n//     method: 'post',\n//     headers: {\n//       'Content-Type': 'application/json'\n//     },\n// })\n// .then(res=>res.json())\n// .then(res=>console.log(res))\n\n// ReactDOM.render(\n//     <div><Hoc/><Detail/></div>,\n//     document.getElementById('root')\n// );\n// ReactDOM.render(\n//     <div>\n//         <Context.Provider value=\"123\">\n//             <Hook/>\n//         </Context.Provider>\n//     </div>,\n//     document.getElementById('root')\n// );\n\n\n\n"],"sourceRoot":""}